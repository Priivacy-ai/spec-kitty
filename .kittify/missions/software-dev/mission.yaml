name: "Software Dev Kitty"
description: "Build high-quality software with structured workflows and test-driven development"
version: "1.0.0"
domain: "software"

# Workflow customization
workflow:
  phases:
    - name: "research"
      description: "Research technologies and best practices"
    - name: "design"
      description: "Define architecture and contracts"
    - name: "implement"
      description: "Write code following TDD"
    - name: "test"
      description: "Validate implementation"
    - name: "review"
      description: "Code review and quality checks"

# Expected artifacts
artifacts:
  required:
    - spec.md
    - plan.md
    - tasks.md
  optional:
    - data-model.md
    - contracts/
    - quickstart.md
    - research.md
    - checklists/

# Path conventions for this mission
paths:
  workspace: "src/"
  tests: "tests/"
  deliverables: "contracts/"
  documentation: "docs/"

# Validation rules
validation:
  checks:
    - git_clean
    - all_tests_pass
    - kanban_complete
    - no_clarification_markers
  custom_validators: true  # Use validators.py

# MCP tools recommended for this mission
mcp_tools:
  required:
    - filesystem
    - git
  recommended:
    - code-search
    - test-runner
    - docker
  optional:
    - github
    - gitlab

# Agent personality/instructions
agent_context: |
  You are a software development agent following TDD practices.
  Your constitution enforces Library-First, CLI Interface, and Test-First principles.
  You work in structured phases: research → design → implement → test → review.

  Key practices:
  - Tests before code (non-negotiable)
  - Library-first architecture
  - CLI interfaces for all features
  - Integration tests over mocks
  - Real dependencies over mocks in testing

# Task metadata fields
task_metadata:
  required:
    - task_id
    - lane
    - phase
    - agent
  optional:
    - shell_pid
    - assignee
    - estimated_hours

# Command customization
commands:
  specify:
    prompt: "Define user scenarios and acceptance criteria"
  plan:
    prompt: "Design technical architecture and implementation plan"
  tasks:
    prompt: "Break into work packages with TDD workflow"
  implement:
    prompt: "Execute implementation following test-first methodology"
  review:
    prompt: "Perform code review and validate against specification"
  accept:
    prompt: "Validate feature completeness and quality gates"
